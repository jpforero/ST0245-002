import matplotlib.pyplot as plt
import pandas as pd
from shapely import wkt
import networkx as nx
import pydeck as pdk



# Recoge los datos de las calles con su riesgo de acoso
edges = pd.read_csv('https://raw.githubusercontent.com/mauriciotoro/ST0245-Eafit/master/proyecto/Datasets/calles_de_medellin_con_acoso.csv', sep=';')
listaCalles = nx.from_pandas_edgelist(edges, source='origin', target='destination', edge_attr='length')
edges['geometry'] = edges['geometry'].apply(wkt.loads)





# Implementación con dijkstra para encontrar la ruta más corta

a = input('Ingrese la coordenada del origen >>> ')
b = input('Ingrese la coordenada del destino >>> ')
shortest_route = nx.dijkstra_path(listaCalles, source=a, target=b, weight='length')
print(shortest_route)

#Pasar de String a Float

dataframe=pd.DataFrame(shortest_route,columns=['calles'])
dataframe['longitud']=dataframe['calles'].map(lambda x:x.split(',')[0])
dataframe['latitud']=dataframe['calles'].map(lambda x:x.split(',')[1])
del(dataframe['calles'])
dataframe=dataframe.replace('\(|\)','',regex=True).astype(float)


#Enlistado
Listac=list(zip(dataframe.longitud,dataframe.latitud))
Matrizcalles=[Listac]
color=["#9D33FF"]
rutaLista=list(zip(Matrizcalles,color))


#Dataframe de la ruta

ruta=pd.DataFrame(rutaLista,columns=['Ruta','color'])


#doc de PathLayer
def hex_to_rgb(h):
    h = h.lstrip("#")
    return tuple(int(h[i : i + 2], 16) for i in (0, 2, 4))


ruta["color"] = ruta["color"].apply(hex_to_rgb)


view_state = pdk.ViewState(latitude=6.217 , longitude=-75.567, zoom=10)

layer = pdk.Layer(
    type="PathLayer",
    data=ruta,
    pickable=True,
    get_color="color",
    width_scale=2,
    width_min_pixels=2,
    get_path="Ruta",
    get_width=5,
)

r = pdk.Deck(layers=[layer], initial_view_state=view_state, tooltip={"text": "{name}"})
r.to_html("path_layer.html")


